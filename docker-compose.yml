services:
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis-db
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PASSWORD=postgres
      - REDIS_HOST=redis-db

    container_name: pose-backend
    networks:
      - strike
    restart: always
    volumes:
      - /data/pose/videos:/data/videos
      - ./backend:/app
  admin_ui:
    build:
      context: ./admin-ui
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    depends_on:
      - backend
    container_name: pose-admin-ui
    networks:
      - strike
    restart: always
  queue:
    build:
      context: .
      dockerfile: ./queue_service/Dockerfile
    depends_on:
      - db
      - redis-db
      - backend
    environment:
      - REDIS_HOST=redis-db
      - CORE_SERVICE_HOST=core
      - BACKEND_HOST=backend
    container_name: pose-queue
    # network_mode: host 
    networks:
      - strike
    restart: always
  core:
    build:
      context: .
      dockerfile: ./core/Dockerfile
    ports:
      - "8001:8001"
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - BACKEND_HOST=backend
    container_name: pose-core   
    depends_on:
      - db
      - redis-db
      - backend
    networks:
      - strike
    restart: always
    runtime: nvidia
    volumes:
      - /data/pose/videos:/data/videos
      - ./core:/workspace
    command: python app.py
  db:
    image: postgres:14
    # ports:
    #   - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=pose
    container_name: pose-postgres
    networks:
      - strike
    restart: always
    volumes:
      - /data/pose/db:/var/lib/postgresql/data
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    container_name: adminer
    networks:
      - strike
    restart: always
  redis-db:
    image: redis:7.4
    ports:
      - "6379:6379"
    container_name: pose-redis
    command: redis-server --slaveof no one --slave-read-only no --save 60 1 
    volumes:
      - /data/pose/redis:/data
    restart: always
    networks:
      - strike
networks:
  strike:
    driver: bridge
